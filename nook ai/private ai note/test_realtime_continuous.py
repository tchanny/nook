#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–µ–π
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–∏—Ç—å nook_engine –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent / "nook_engine"))

from nook_engine import NookEngine

def test_realtime_continuous():
    """–¢–µ—Å—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    
    print("üéôÔ∏è Nook Engine - –¢–µ—Å—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞—Ç—å –¥–≤–∏–∂–æ–∫ —Å –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–º —Ä–µ–∂–∏–º–æ–º
    engine = NookEngine(
        model_size="base.en",      # –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        continuous_mode=True,      # –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ä–µ–∂–∏–º
        interruption_gap=0.8,      # –ë–æ–ª–µ–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–±–∏–≤–∞–Ω–∏—è
        language="en"
    )
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    if not engine.initialize():
        print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
        return
    
    print("‚úÖ –î–≤–∏–∂–æ–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    print("üîÑ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π —Ä–µ–∂–∏–º: –í–ö–õ")
    print("‚è±Ô∏è  –ü—Ä–æ–º–µ–∂—É—Ç–æ–∫ –ø–µ—Ä–µ–±–∏–≤–∞–Ω–∏—è: 0.8—Å")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø–∏—Å–∏
    output_file = "realtime_continuous.json"
    chunk_duration = 5  # 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ chunk
    
    print(f"\nüé§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...")
    print(f"üìÅ –§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {output_file}")
    print(f"‚è±Ô∏è  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å chunk: {chunk_duration}—Å")
    print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    try:
        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        success = engine.process_realtime(
            output_file=output_file,
            chunk_duration=chunk_duration,
            save_audio=True
        )
        
        if success:
            print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏")
            
    except KeyboardInterrupt:
        print("\nüõë –ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        engine.cleanup()
        print("üßπ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")

if __name__ == "__main__":
    test_realtime_continuous()
